#!/usr/bin/env python3
import argparse
import subprocess
import json
import sys

slack_member_id = "U03D34QSSTB"

arg_parser = argparse.ArgumentParser(
    description="Format a Slack message requesting a PR review"
)
arg_parser.add_argument(
    "--pr",
    action="store",
    help="the number of the PR to reference (defaults to the last PR authored by you)",
)
args = arg_parser.parse_args()

outputFormat = "--json 'title,url,headRepository,headRepositoryOwner,number,additions,deletions'"
if args.pr is None:
    # Get the latest PR authored by @me
    pr_details_process = subprocess.run(
        f"gh pr list --author '@me' {outputFormat}",
        shell=True,
        capture_output=True,
    )

    all_pr_details = json.loads(pr_details_process.stdout)

    if len(all_pr_details) == 0:
        print("Error: no suitable PRs found", file=sys.stderr)
        exit(1)

    pr_details = all_pr_details[0]

else:
    pr_details_process = subprocess.run(
            f"gh pr view {args.pr} {outputFormat}",
            shell=True,
            capture_output=True,
    )

    pr_details = json.loads(pr_details_process.stdout)

title     = pr_details['title']
url       = pr_details['url']
additions = pr_details['additions']
deletions = pr_details['deletions']
owner     = pr_details['headRepositoryOwner']['login']
repo      = pr_details['headRepository']['name']

context = repo if owner == 'monzo' else "/".join([owner, repo])

message = f":github: (_{context}_) *[{title}]({url})* (+{additions}, â€“{deletions})"
subprocess.run("pbcopy", text=True, input=message)
print(message)

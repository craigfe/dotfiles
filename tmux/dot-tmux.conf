# Start by unbinding all the defaults for all keymaps
# See `tmux [-f <config-file>] list-keys` for the list of keybindings
unbind -a -T prefix
unbind -a -T root
unbind -a -T copy-mode
unbind -a -T copy-mode-vi

set -g prefix C-f
set -g status off             # Disable the status bar
set -g history-limit 1000000  # Make the scrollback buffer huge

# Use true-colour – here's hoping you're running a terminal that
# actually supports it.
# set -g default-terminal "tmux-256color"
# set -ag terminal-overrides ",xterm-256color:RGB"

# Escape sequences that control the terminal (e.g. setting the background color
# in Vim) should not be intercepted by Tmux
# set -g allow-passthrough on

# Using `vi` mode explicitly, which causes `copy-mode-vi` keymap to be used
# instead of `copy-mode` as well as some other small behavioural things (e.g.
# selection cursor _on_ characters rather than between characters). If we don't
# set this explicitly, `tmux` will try to implicitly guess it by regex-ing over
# the value of the `$EDITOR` variable, which is obviously terrible. 
set -g mode-keys vi

# This prevents a bad interaction between Vim background color and Tmux
set -ga terminal-overrides ",*256col*:Tc"

bind -T prefix C-r source-file ~/.tmux.conf # re-evaluates the config
bind d detach-client

# Panels and status bar
bind -T prefix ` set -g status  # Toggle status bar visibility
bind -T root C-Tab next-window  # Ctrl-Tab (or Command-Tab w/ Alacritty remapping)
bind -T prefix Tab next-window
bind -T prefix n new-window
bind -T prefix s new-session

bind -T prefix : command-prompt
bind -T prefix r command-prompt -I "#S" { rename-session "%%" }
bind -T prefix q kill-session

bind -T prefix 0 select-window -t :=0
bind -T prefix 1 select-window -t :=1
bind -T prefix 2 select-window -t :=2
bind -T prefix 3 select-window -t :=3
bind -T prefix 4 select-window -t :=4
bind -T prefix 5 select-window -t :=5
bind -T prefix 6 select-window -t :=6
bind -T prefix 7 select-window -t :=7
bind -T prefix 8 select-window -t :=8
bind -T prefix 9 select-window -t :=9

# Status bar styling
set -g status-position top
set -g status-justify centre
set -g status-bg "#1e2132"
set -g window-style ""
set -g window-active-style ""
set -g status-left "[#{session_name}]"
set -g status-left-style "fg=#6b7089"
set -g status-left-length 0
set -g status-right ""
set -g status-right-style ""
set -g status-right-length 15
set -g window-status-current-style "bold"
set -g window-status-style "fg=#6b7089"
set -g window-status-format " #[fg=#c6c8d1]#{window_index}:#{?#{==:#W,fish},#{b:pane_current_path},#W}#F "
set -g window-status-current-format " #[fg=#c6c8d1]#{window_index}:#{?#{==:#W,fish},#{b:pane_current_path},#W}#F "
set -g window-status-separator ""
set -g pane-active-border-style "fg=#6b7089"
set -g pane-border-style "fg=#6b7089"

# Hide status bar if there is only one window in the session
set-hook -g client-session-changed 'set-window -F status "#{?#{==:#{session_windows},1},off,on}"'
set-hook -g window-unlinked 'set-window -F status "#{?#{==:#{session_windows},1},off,on}"'
set-hook -g window-linked 'set-window -F status "#{?#{==:#{session_windows},1},off,on}"'

# Copy-mode bindings
bind -T prefix Space copy-mode
bind -T root C-Space copy-mode
bind -T copy-mode-vi Escape send-keys -X cancel
bind -T copy-mode-vi C-C    send-keys -X cancel
bind -T copy-mode-vi \$     send-keys -X end-of-line
bind -T copy-mode-vi \%     send-keys -X next-matching-bracket
bind -T copy-mode-vi k      send-keys -X cursor-up
bind -T copy-mode-vi j      send-keys -X cursor-down
bind -T copy-mode-vi h      send-keys -X cursor-left
bind -T copy-mode-vi l      send-keys -X cursor-right
bind -T copy-mode-vi v      send-keys -X begin-selection
bind -T copy-mode-vi y      send-keys -X copy-pipe 'pbcopy'
bind -T copy-mode-vi Enter  send-keys -X copy-pipe-and-cancel 'pbcopy'
bind -T copy-mode-vi Space  if -F "#{selection_present}" { send-keys -X clear-selection } { send-keys -X begin-selection }
bind -T copy-mode-vi /      command-prompt -T search -p "(search down)" { send-keys -X search-forward "%%" }
bind -T copy-mode-vi n      send-keys -X search-again
bind -T copy-mode-vi 0      send-keys -X start-of-line
bind -T copy-mode-vi V      send-keys -X select-line
bind -T copy-mode-vi W      send-keys -X next-space
bind -T copy-mode-vi b      send-keys -X previous-word
bind -T copy-mode-vi e      send-keys -X next-word-end
bind -T copy-mode-vi w      send-keys -X next-word
bind -T copy-mode-vi \{     send-keys -X previous-paragraph
bind -T copy-mode-vi \}     send-keys -X next-paragraph

# Tree-mode bindings
#
# The mode occupied by `choose-tree` doesn't have its own keymap, so we have to do
# this conditional hack to add behaviour to it.
bind -T root n if -F '#{==:tree-mode,#{pane_mode}}' { new-session } { send-keys n }

set -g mouse on # Using the mouse in Tmux
# There's no way to scroll "up" in Tmux except by entering copy mode
# '-e' means enter copy mode but automatically exit if I scroll past the bottom
# Use mouse drag to select text – copy automatically once w'eve finished selecting
bind -n WheelUpPane copy-mode -e
bind -n MouseDrag1Pane copy-mode -M  # Enter copy mode and start in a mouse selection
bind -T copy-mode-vi WheelUpPane       select-pane \; send-keys -X -N 5 scroll-up
bind -T copy-mode-vi WheelDownPane     select-pane \; send-keys -X -N 5 scroll-down
bind -T copy-mode-vi MouseDown1Pane    select-pane
bind -T copy-mode-vi MouseDrag1Pane    select-pane \; send-keys -X begin-selection
bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-no-clear 'pbcopy'

# By default when you press escape, tmux will wait 500ms before it passes
# escape on to the program, just in case we're actually entering an escape
# sequence.
set -g escape-time 1
